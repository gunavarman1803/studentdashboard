import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';

var createNativeOptions = function (options) {
    return options &&
        options.map(function (option, index) {
            return option.options ? (React.createElement("optgroup", { label: option.label, key: index }, createNativeOptions(option.options))) : (React.createElement("option", { value: option.value, key: index, disabled: option.disabled }, option.label));
        });
};
var CMultiSelectNativeSelect = forwardRef(function (_a, ref) {
    var id = _a.id, options = _a.options, rest = __rest(_a, ["id", "options"]);
    return (React.createElement("select", __assign({ className: "multi-select-new" }, (id && { id: "".concat(id, "-multi-select") }), (id && { name: "".concat(id, "-multi-select") }), { tabIndex: -1, style: { display: 'none' } }, rest, { ref: ref }), options && createNativeOptions(options)));
});
CMultiSelectNativeSelect.propTypes = {
    options: PropTypes.array,
    value: PropTypes.oneOfType([
        PropTypes.number,
        PropTypes.string,
        PropTypes.arrayOf(PropTypes.string.isRequired),
    ]),
};
CMultiSelectNativeSelect.displayName = 'CMultiSelectNativeSelect';

export { CMultiSelectNativeSelect };
//# sourceMappingURL=CMultiSelectNativeSelect.js.map
